COM=>(Component object Model)

Com Architecture

1.Encapsulation
=> Objects expose functionality via intefaces rather than implementation details

2.language independence
=> Com objects can be created in one language and used in another
3. Interoperability
=> Com enables communication between softwarer components across differnet processes and machines
4. Binary standard
=>Unlike tradational header files, COM interfaces are defined in a binary format ensuring compatibility across compiliers

COM INterface and class

1.QueryInterface()=> used to obtain pointers to other interfaces
2.AddRef()=> Increase the refence count of the object
3.Release()=> Descrese the refernce count and destroys the object with no refernce 

interface IMyInterface:public IUnkown{
	virtual HRESULT STDMETHODCALLTYPE DOsomething=0;
	
}

COM CLASSESS

Lab
Craete a com Server DLL that defines and implement IMyInterface
create a client application that will use the com component that we have created


ddb76e28-5eb7-4d2b-bd9d-eeb1450edb7e

First 8 characters->data1:ddb76e28
Next 4 chars=>5eb7->data2
Next 4 chars=>4d2b->data3
Next 16 chars(divided into 8 bytes)
{}==> data4


ATL (Active template library)

// {06F0CFB7-7715-4886-B8F7-0B2FB4CF0C7A}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>, 
0x6f0cfb7, 0x7715, 0x4886, 0xb8, 0xf7, 0xb, 0x2f, 0xb4, 0xcf, 0xc, 0x7a);

// {54CC700F-1759-4D48-B97C-F5DCC7B6675F}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>, 
0x54cc700f, 0x1759, 0x4d48, 0xb9, 0x7c, 0xf5, 0xdc, 0xc7, 0xb6, 0x67, 0x5f);

// {E44E93DD-D430-42D8-831A-892B632D3115}
IMPLEMENT_OLECREATE(<<class>>, <<external_name>>, 
0xe44e93dd, 0xd430, 0x42d8, 0x83, 0x1a, 0x89, 0x2b, 0x63, 0x2d, 0x31, 0x15);




