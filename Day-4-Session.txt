COM=>(Component object Model)

Com Architecture

1.Encapsulation
=> Objects expose functionality via intefaces rather than implementation details

2.language independence
=> Com objects can be created in one language and used in another
3. Interoperability
=> Com enables communication between softwarer components across differnet processes and machines
4. Binary standard
=>Unlike tradational header files, COM interfaces are defined in a binary format ensuring compatibility across compiliers

COM INterface and class

1.QueryInterface()=> used to obtain pointers to other interfaces
2.AddRef()=> Increase the refence count of the object
3.Release()=> Descrese the refernce count and destroys the object with no refernce 

interface IMyInterface:public IUnkown{
	virtual HRESULT STDMETHODCALLTYPE DOsomething=0;
	
}

COM CLASSESS

Lab
Craete a com Server DLL that defines and implement IMyInterface
create a client application that will use the com component that we have created


ddb76e28-5eb7-4d2b-bd9d-eeb1450edb7e

First 8 characters->data1:ddb76e28
Next 4 chars=>5eb7->data2
Next 4 chars=>4d2b->data3
Next 16 chars(divided into 8 bytes)
{}==> data4

